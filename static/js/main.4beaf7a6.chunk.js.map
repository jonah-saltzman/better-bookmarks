{"version":3,"sources":["context/Context.js","constants.js","api/auth.js","layout/Header.js","context/action.types.js","pages/PageNotFound.js","pages/Auth.js","newtwturl.js","pages/Home.js","api/folders.js","components/Folder.js","api/tweets.js","components/Tweet.js","pages/OneFolder.js","functions/getImportResults.js","components/ImportField.js","pages/Import.js","pages/Folders.js","context/reducer.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","BB_URL","Boolean","window","location","hostname","match","TWTAUTH_PREFIX","twtREOne","RegExp","twtRETwo","twtEmbedRE","authenticate","email","password","twtId","register","a","URL","console","log","request","fetch","method","cache","headers","body","JSON","stringify","response","status","json","data","error","success","message","token","userId","twtChallenge","login","logout","Header","useContext","state","dispatch","loggedIn","signout","toast","type","signoutResult","forEach","action","payload","Navbar","sticky","className","NavbarBrand","tag","Link","to","NavbarText","onClick","PageNotFound","Auth","useState","isSubmitting","setIsSubmitting","isLoading","setIsLoading","signIn","setSignIn","setEmail","setPassword","passwordConfirm","setPasswordConfirm","setTwtId","staySignedIn","setStaySignedIn","handleSubmit","event","preventDefault","useEffect","authResult","setCredentials","Spinner","color","Container","fluid","Row","Col","md","Form","onSubmit","FormGroup","name","id","placeholder","value","onChange","e","target","check","Label","Input","checked","style","fontWeight","letterSpacing","key","Button","block","padding","fontSize","blur","getTwtUrl","user","challenge","Home","props","search","close","twtState","showTwtAuth","setShowTwtAuth","twtAuthUrl","setTwtAuthUrl","Card","CardTitle","CardBody","open","getFolders","getFoldersURL","folders","getOneFolder","folderId","tweets","newFolder","folderName","newFolderURL","reqData","Authorization","folder","deleteFolder","deleteFolderURL","changeFolderName","newName","changeNameURL","Folder","refresh","selectFolder","selected","editable","setEditable","setFolderName","callingAPI","setCallingAPI","creatingFolder","setCreatingFolder","editingFolder","setEditingFolder","showDelete","setShowDelete","deletingFolder","setDeletingFolder","editName","handleNewFolder","createFolder","result","nameForm","onBlur","autoFocus","deleteModal","Modal","show","backdrop","keyboard","ModalHeader","ModalTitle","ModalBody","ModalFooter","width","overflow","textOverflow","whiteSpace","xs","length","substring","hidden","zIndex","bookmarkTweets","bookmarkURL","deleteTweet","tweet","deleteURL","Tweet","load","embed","remove","display","enteredView","setEnteredView","twtHtml","twtUrl","tweetRef","createRef","divRef","useInViewport","disconnectOnLeave","inViewport","enterCount","tweetDOMId","divDOMId","ref","data-conversation","data-dnt","data-theme","href","OneFolder","tweetsArr","setTweetsArr","twtObjs","setTwtObjs","noFolder","setNoFolder","loadedTweets","setLoadedTweets","loadedTweet","setLoadedTweet","deletingTweet","setDeletingTweet","eraseTweet","setEraseTweet","colA","colB","tweetCols","setTweetCols","loadTweet","elementId","twttr","widgets","document","getElementById","events","bind","children","dataset","tweetId","newObjs","map","obj","includes","newArr","push","some","loaded","filter","i","ListGroupItem","scrollable","getImportResults","resultObj","header","link","showBody","remaining","concat","apiErrIds","badIds","bookmarkedCount","duplicateCount","apiErrCount","ImportField","fieldNumber","setValue","valid","validate","inputValue","setInputValue","validity","setValidity","onFocus","Import","getInitialFields","n","number","callingApi","setCallingApi","inputObjs","setInputObjs","showResult","setShowResult","resultInfo","setResultInfo","validateInputs","input","test","reduce","array","Object","keys","lastObj","newObj","updateValue","inputNumber","twtLink","resultModal","Folders","gotFolders","setGotFolders","foldersArr","setFoldersArr","currentFolder","setCurrentFolder","prevFolder","setPrevFolder","selectedFolder","setSelectedFolder","refreshFolders","find","exact","path","prevUser","showLogout","initialState","inAuth","twtAuth","authed","twtToken","twtSecret","randomBytes","toString","folerName","folderToUpdate","folderIdToUpdate","App","useReducer","reducer","basename","Provider","theme","component","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4beaf7a6.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AppContext = createContext();","\nconst isDev = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\twindow.location.hostname === '[::1]' ||\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n)\n\nexport const BB_URL = isDev\n\t? 'http://127.0.0.1:4000'\n\t: 'https://betterbookmarks.herokuapp.com'\n\n\nexport const TWTAUTH_PREFIX =\n\t'https://twitter.com/i/oauth2/authorize?response_type=code&client_id=YnEzOGs2Y2pLMWRUTXM2X3dYU1g6MTpjaQ&redirect_uri=' +\n\tBB_URL + '/twtauth?user='\n\nexport const TWTAUTH_STATE = '&scope=tweet.read%20like.read&state='\n\nexport const TWTAUTH_CHALLENGE = '&code_challenge='\n\nexport const TWTAUTH_SUFFIX = '&code_challenge_method=plain'\n\nexport const twtREOne = new RegExp(/(?:\\/)(\\d+)(?:\\/|\\?|$)/)\nexport const twtRETwo = new RegExp(/^\\d+$/)\n\nexport const twtEmbedRE = new RegExp(/(?<=a href=)[^ ]+(?=\\?ref)/)","import { BB_URL } from \"../constants\"\n\nexport const authenticate = async (email, password, twtId, register) => {\n    const URL = BB_URL + '/auth' + (register ? '/signup' : '/login')\n    console.log(`authenticating with url: `)\n    console.log(URL)\n    const request = {\n        email: email,\n        password: password,\n        twtId: twtId || null\n    }\n    try {\n        const response = await fetch(URL, {\n            method: 'POST',\n            cache: 'no-cache',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(request)\n        })\n        const status = response.status\n        const data = await response.json()\n        if (!register) {\n            return {\n                error: status === 200 ? null : data,\n                success: status === 200 ? data.message : null,\n                token: data.token || null,\n                userId: data.userId || null,\n                twtChallenge: data.twtChallenge || null\n            }\n        } else {\n            if (status === 200) {\n                const login = await authenticate(email, password, null, false)\n                if (login.success) {\n                    return {\n                        error: null,\n                        success: `Account created & logged in!`,\n                        token: login.token,\n                        userId: login.userId,\n                        twtChallenge: login.twtChallenge\n                    }\n                } else {\n                    return { error: `User ${email} created but login failed.` }\n                }\n            } else {\n                return { error: data }\n            }\n        }\n    } catch(error) {\n        console.error(error)\n        return {\n            error: \"Unknown error\"\n        }\n    }\n}\n\nexport const logout = async (token) => {\n    const URL = BB_URL + '/user/signout'\n    try {\n        const response = await fetch(URL, {\n            method: 'Get',\n            cache: 'no-cache',\n            headers: {\n                'Authorization': `JWT ${token}`\n            }\n        })\n        const status = response.status\n        const data = await response.json()\n        if (status === 200) {\n            return {\n                error: null,\n                success: data.message,\n            }\n        } else {\n            return {\n                error: data.message\n            }\n        }\n    } catch(error) {\n        return { error: \"Unknown error logging out.\" }\n    }\n} ","//TODO: DONE set NavbarBrand to go to home page and export Header\n\nimport React, { useContext } from 'react'\nimport { Navbar, NavbarBrand, NavbarText, Button } from 'reactstrap'\nimport { NavLink } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport Nav from 'reactstrap/lib/Nav'\nimport { AppContext } from '../context/Context'\n\nimport {\n\tSET_USER,\n\tSET_LOGIN,\n\tSET_TOKEN,\n\tSET_FOLDERS,\n\tSET_USER_ID,\n} from '../context/action.types'\n\n\nimport { toast } from 'react-toastify'\n\nimport { logout } from '../api/auth'\n\nconst Header = () => {\n\tconst { state, dispatch } = useContext(AppContext)\n\tconst { loggedIn, token } = state\n\n\tconst signout = async () => {\n\t\tif (!token) {\n\t\t\ttoast('No user to logout!', { type: 'error' })\n\t\t\treturn\n\t\t}\n\t\tconst signoutResult = await logout(token)\n\t\tif (signoutResult.error) {\n\t\t\ttoast(signoutResult.error, { type: 'error' })\n\t\t\treturn\n\t\t}\n\t\ttoast(signoutResult.success, { type: 'success' })\n\t\tconst actions = [SET_USER, SET_LOGIN, SET_TOKEN, SET_FOLDERS, SET_USER_ID]\n\t\tactions.forEach((action) => dispatch({ type: action, payload: null }))\n\t}\n\n\treturn (\n\t\t<Navbar sticky='top' className='nav'>\n\t\t\t<NavbarBrand tag={Link} to='/' className='text-white navbrand'>\n\t\t\t\tBetter Bookmarks\n\t\t\t</NavbarBrand>\n\t\t\t<NavLink to='/folders/view' className='text-white'>\n\t\t\t\tFolders\n\t\t\t</NavLink>\n\t\t\t<NavLink to='/likes' className='text-white'>\n\t\t\t\tLikes\n\t\t\t</NavLink>\n\t\t\t<NavLink to='/folders/import' className='text-white'>\n\t\t\t\tImport\n\t\t\t</NavLink>\n\t\t\t<NavbarText className='text-white float-right navtxt'>\n\t\t\t\t{loggedIn ? (\n\t\t\t\t\t<span onClick={signout} className='text-white text-large link'>\n\t\t\t\t\t\tLogout\n\t\t\t\t\t</span>\n\t\t\t\t) : (\n\t\t\t\t\t<NavLink className='text-white text-large' to='/auth'>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</NavLink>\n\t\t\t\t)}\n\t\t\t</NavbarText>\n\t\t</Navbar>\n\t)\n}\n\nexport default Header\n","export const SET_USER = \"SET_USER\"\nexport const SET_USER_ID = 'SET_USER_ID'\nexport const SET_TWT_CHALLENGE = 'SET_TWT_CHALLENGE'\nexport const SET_FOLDERS = \"SET_FOLDERS\"\nexport const SET_LOGIN = \"SET_LOGIN\"\nexport const SET_TOKEN = \"SET_TOKEN\"\nexport const RESET_SIGNIN = 'RESET_SIGNIN'\nexport const SET_SHOW_LOGOUT = 'SET_SHOW_LOGOUT'\nexport const SET_PREV_USER = 'SET_PREV_USER'\nexport const SET_SINGLE_FOLDER = 'SET_SINGLE_FOLDER'\nexport const SET_SINGLE_FOLDER_NAME = 'SET_SINGLE_FOLDER_NAME'","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst PageNotFound = () => {\n  return (\n    <Redirect to='/'></Redirect>\n  );\n};\n\n//FIXME: missing keywords\nexport default PageNotFound;\n","import React, { useState, useContext, useEffect } from 'react'\n\nimport {\n\tContainer,\n\tForm,\n\tFormGroup,\n\tLabel,\n\tInput,\n\tButton,\n\tSpinner,\n\tRow,\n\tCol,\n} from 'reactstrap'\n\nimport { AppContext } from '../context/Context'\n\nimport {\n\tSET_USER,\n\tSET_TOKEN,\n\tSET_LOGIN,\n\tSET_USER_ID,\n\tSET_TWT_CHALLENGE,\n} from '../context/action.types'\n\nimport { toast } from 'react-toastify'\n\nimport { Redirect } from 'react-router-dom'\n\nimport { authenticate } from '../api/auth'\n\nconst Auth = () => {\n\t// Get context and destructure loggedIn from state\n\tconst { state, dispatch } = useContext(AppContext)\n\tconst { loggedIn } = state\n\n\t// State for handling loading & triggering API calls\n\tconst [isSubmitting, setIsSubmitting] = useState(false)\n\tconst [isLoading, setIsLoading] = useState(false)\n\n\t// State variable representing input fields\n\tconst [signIn, setSignIn] = useState(true)\n\tconst [email, setEmail] = useState(\"\")\n\tconst [password, setPassword] = useState(\"\")\n\tconst [passwordConfirm, setPasswordConfirm] = useState(\"\")\n\tconst [twtId, setTwtId] = useState(\"\")\n\tconst [staySignedIn, setStaySignedIn] = useState(false)\n\n\t// Toggle betweein sign-in and register forms\n\tconst toggleAuth = () => {\n\t\tsetSignIn(!signIn)\n\t}\n\n\t// Handle form submission & validate input\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault()\n\t\tif (email === '' || password === '' || (!signIn && passwordConfirm === '')) {\n\t\t\ttoast(`Please complete all required fields.`, { type: 'error' })\n\t\t\treturn\n\t\t}\n\t\tif (!signIn && password !== passwordConfirm) {\n\t\t\ttoast(`Passwords do not match!`, { type: 'error' })\n\t\t\treturn\n\t\t}\n\t\tsetIsLoading(true)\n\t\tsetIsSubmitting(true)\n\t}\n\n\t// If the form event handler validates input, call the auth API\n\tuseEffect(() => {\n\t\tif (!isSubmitting) {\n\t\t\tsetIsLoading(false)\n\t\t\treturn\n\t\t}\n\t\t(async () => {\n\t\t\tconst authResult = await authenticate(\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t\ttwtId,\n\t\t\t\t!signIn\n\t\t\t)\n\t\t\tif (authResult.error) {\n\t\t\t\ttoast(authResult.error, { type: 'error' })\n\t\t\t} else {\n\t\t\t\ttoast(authResult.success, { type: 'success' })\n\t\t\t\tsetCredentials(email, authResult)\n\t\t\t}\n\t\t\tsetIsLoading(false)\n\t\t\tsetIsSubmitting(false)\n\t\t})()\n\t}, [isSubmitting])\n\n\t// Set credential variables in parent state\n\tconst setCredentials = (email, authResult) => {\n\t\tdispatch({\n\t\t\ttype: SET_USER,\n\t\t\tpayload: email,\n\t\t})\n\t\tdispatch({\n\t\t\ttype: SET_TOKEN,\n\t\t\tpayload: authResult.token,\n\t\t})\n\t\tdispatch({\n\t\t\ttype: SET_USER_ID,\n\t\t\tpayload: authResult.userId\n\t\t})\n\t\tdispatch({\n\t\t\ttype: SET_TWT_CHALLENGE,\n\t\t\tpayload: authResult.twtChallenge\n\t\t})\n\t\tdispatch({\n\t\t\ttype: SET_LOGIN,\n\t\t\tpayload: true,\n\t\t})\n\t}\n\n\t// Render spinner while waiting for API\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<div className='Center'>\n\t\t\t\t<Spinner color='primary' />\n\t\t\t\t<div className='text-primary'>Loading...</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t// If logged in, redirect to /folders, else, render auth forms\n\tif (loggedIn) {\n\t\treturn <Redirect to='/folders/view'></Redirect>\n\t} else {\n\t\treturn (\n\t\t\t<Container fluid className='mt-5 '>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md='8' className='offset-md-2 p-3 '>\n\t\t\t\t\t\t<Form className='formcard auth-form' onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<FormGroup className='mt-4'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\t\t\tplaceholder='Email'\n\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='input mt-2'\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t{signIn ? (\n\t\t\t\t\t\t\t\t<FormGroup check className='mt-2 ml-3'>\n\t\t\t\t\t\t\t\t\t<Label check>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tclassName='checkmark'\n\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetStaySignedIn(!staySignedIn)\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tchecked={staySignedIn}\n\t\t\t\t\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tclassName='text-right'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#f9f9f9',\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: '400',\n\t\t\t\t\t\t\t\t\t\t\t\tletterSpacing: '1px',\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\tStay signed in\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t<FormGroup key='password-confirm'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName='input mt-2'\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\tname='password-confirm'\n\t\t\t\t\t\t\t\t\t\t\tid='password-confirm'\n\t\t\t\t\t\t\t\t\t\t\tvalue={passwordConfirm}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setPasswordConfirm(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Confirm password'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormGroup>,\n\t\t\t\t\t\t\t\t\t<FormGroup key='twtId'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName='input mt-2'\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\tname='twtId'\n\t\t\t\t\t\t\t\t\t\t\tid='twtId'\n\t\t\t\t\t\t\t\t\t\t\tvalue={twtId}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setTwtId(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Twitter Username'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormGroup>,\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t'text-uppercase ' + (signIn ? 'mt-3' : 'mt-4')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tpadding: '15px',\n\t\t\t\t\t\t\t\t\tfontSize: '18px',\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t{signIn ? 'Sign in' : 'Register'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md='8' className='offset-md-8'>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\te.target.blur()\n\t\t\t\t\t\t\t\ttoggleAuth()\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\tclassName='text-uppercase'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: '15px',\n\t\t\t\t\t\t\t\tfontSize: '18px',\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{signIn ? 'Register' : 'Sign in'}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default Auth","import {\n\tTWTAUTH_PREFIX,\n\tTWTAUTH_STATE,\n\tTWTAUTH_CHALLENGE,\n    TWTAUTH_SUFFIX\n} from './constants'\n\nconst getTwtUrl = (user, challenge, state) => {\n    return (\n\t\t\tTWTAUTH_PREFIX +\n\t\t\tuser +\n\t\t\tTWTAUTH_CHALLENGE +\n\t\t\tchallenge +\n\t\t\tTWTAUTH_STATE +\n\t\t\tstate +\n\t\t\tTWTAUTH_SUFFIX\n\t\t)\n}\n\nexport default getTwtUrl","import React, { useState, useContext, useEffect } from 'react'\n\nimport {\n    Card,\n    CardBody,\n    CardTitle,\n} from 'reactstrap'\n\nimport { AppContext } from '../context/Context'\n\nimport getTwtUrl from '../newtwturl'\n\nconst Home = (props) => {\n\n\tif (props.location.search === '?close') {\n\t\twindow.close()\n\t}\n\n    const { state, dispatch } = useContext(AppContext)\n    const { loggedIn, userId, twtChallenge, twtState } = state\n\n\tconst [showTwtAuth, setShowTwtAuth] = useState(false)\n\tconst [twtAuthUrl, setTwtAuthUrl] = useState(\"\")\n\n\tconst twtPopup = () => {\n\t\twindow.open(twtAuthUrl)\n\t}\n\n\tuseEffect(() => {\n\t\tif (loggedIn && userId) {\n\t\t\tsetTwtAuthUrl(getTwtUrl(userId, twtChallenge, twtState))\n\t\t\tsetShowTwtAuth(true)\n\t\t} else {\n\t\t\tsetTwtAuthUrl(\"\")\n\t\t\tsetShowTwtAuth(false)\n\t\t}\n\t},[loggedIn])\n\n    return (\n\t\t\t<div className='center-home'>\n\t\t\t\t<Card className='homecard card-fab'>\n\t\t\t\t\t<CardTitle>Welcome to Better Bookmarks</CardTitle>\n\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>Organize your favorite Tweets into folders</li>\n\t\t\t\t\t\t\t\t<li>Share folders with anyone</li>\n\t\t\t\t\t\t\t\t<li>No more \"This Tweet has been deleted\"</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t{showTwtAuth ? <span className='link' onClick={twtPopup}>Login with Twitter</span> : null}\n\t\t\t\t\t</CardBody>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t)\n}\n\nexport default Home","import { BB_URL as URL } from \"../constants\"\n\n// 403 is old token\n\nexport const getFolders = async (token) => {\n\tconst getFoldersURL = URL + '/user/folders'\n\ttry {\n\t\tconst response = await fetch(getFoldersURL, {\n\t\t\tmethod: 'GET',\n\t\t\tcache: 'no-cache',\n\t\t\theaders: {\n                'Authorization': `JWT ${token}`\n\t\t\t},\n\t\t})\n        const status = response.status\n        const data = await response.json()\n        if (status === 200) {\n            return {\n                error: null,\n                folders: data.folders,\n            }\n        } else {\n            return {\n                error: data.message\n            }\n        }\n\t} catch (error) {\n\t\tconsole.error(error)\n        return null\n\t}\n}\n\nexport const getOneFolder = async (folderId, token) => {\n    const getFoldersURL = URL + '/user/folders/' + folderId\n\ttry {\n\t\tconst response = await fetch(getFoldersURL, {\n\t\t\tmethod: 'GET',\n\t\t\tcache: 'no-cache',\n\t\t\theaders: {\n                'Authorization': `JWT ${token}`\n\t\t\t},\n\t\t})\n        const status = response.status\n        const data = await response.json()\n        if (status === 200) {\n            return {\n                error: null,\n                tweets: data.tweets,\n            }\n        } else {\n            return {\n                error: data.message\n            }\n        }\n\t} catch (error) {\n\t\tconsole.error(error)\n        return {error: error}\n\t}\n}\n\nexport const newFolder = async (folderName, token) => {\n    const newFolderURL = URL + '/user/folders'\n    const reqData = JSON.stringify({\n                    folderName: `${folderName}`\n                })\n    try {\n\t\t\tconst response = await fetch(newFolderURL, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tcache: 'no-cache',\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `JWT ${token}`,\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: reqData,\n\t\t\t})\n\t\t\tconst status = response.status\n\t\t\tconst data = await response.json()\n\t\t\tif (status === 201) {\n\t\t\t\treturn {\n\t\t\t\t\terror: null,\n\t\t\t\t\tmessage: `Created folder ${data.folder}!`,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\terror: data.message,\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t\treturn { error: error }\n\t\t}\n}\n\nexport const deleteFolder = async (folderId, token) => {\n\tconst deleteFolderURL = URL + '/user/folders/' + folderId\n\ttry {\n\t\tconst response = await fetch(deleteFolderURL, {\n\t\t\tmethod: 'DELETE',\n\t\t\tcache: 'no-cache',\n\t\t\theaders: {\n\t\t\t\tAuthorization: `JWT ${token}`\n\t\t\t}\n\t\t})\n\t\tconst status = response.status\n\t\tconst data = await response.json()\n\t\tif (status === 200) {\n\t\t\treturn {\n\t\t\t\terror: null,\n\t\t\t\tmessage: `Deleted folder ${data.folder.folderName}!`,\n\t\t\t}\n\t\t} else {\n\t\t\treturn {\n\t\t\t\terror: data.message,\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error)\n\t\treturn { error: error }\n\t}\n}\n\nexport const changeFolderName = async (folderId, newName, token) => {\n\tconsole.log(`changing folder ${folderId} to ${newName}`)\n\tconst changeNameURL = URL + '/user/folders/' + folderId\n\tconst reqData = JSON.stringify({\n\t\tnewName: `${newName}`,\n\t})\n\ttry {\n\t\tconst response = await fetch(changeNameURL, {\n\t\t\tmethod: 'POST',\n\t\t\tcache: 'no-cache',\n\t\t\theaders: {\n\t\t\t\tAuthorization: `JWT ${token}`,\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: reqData,\n\t\t})\n\t\tconst status = response.status\n\t\tconst data = await response.json()\n\t\tconsole.log(data.message)\n\t\tif (status === 201) {\n\t\t\treturn {\n\t\t\t\terror: null,\n\t\t\t\tmessage: data.message\n\t\t\t}\n\t\t} else {\n\t\t\treturn {\n\t\t\t\terror: data.message,\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error)\n\t\treturn { error: error }\n\t}\n}","import React, { useContext, useEffect, useState } from 'react'\n//import { Row, Col, Container, Form, FormGroup } from 'reactstrap'\n\nimport { Stack, Form, Row, Col, Container, Modal, ModalBody, ModalTitle, ModalFooter, Button, CloseButton } from 'react-bootstrap'\n\nimport { MdDelete, MdEdit } from 'react-icons/md'\n\nimport { useHistory  } from 'react-router-dom'\n\nimport { SET_SINGLE_FOLDER, SET_SINGLE_FOLDER_NAME } from '../context/action.types'\n\nimport { AppContext } from '../context/Context'\n\nimport { changeFolderName, deleteFolder, newFolder as createFolder } from '../api/folders'\n\nimport { toast } from 'react-toastify'\nimport ModalHeader from 'react-bootstrap/esm/ModalHeader'\n\nconst Folder = (props) => {\n\tconst { folder, newFolder, refresh, selectFolder, selected } = props\n    const { state, dispatch } = useContext(AppContext)\n\tconst { token } = state\n\tconst [editable, setEditable] = useState(false)\n\tconst [folderName, setFolderName] = useState(newFolder ? \"\" : folder.folderName)\n\tconst [callingAPI, setCallingAPI] = useState(false)\n\tconst [creatingFolder, setCreatingFolder] = useState(false)\n\tconst [editingFolder, setEditingFolder] = useState(false)\n\tconst [showDelete, setShowDelete] = useState(false)\n\tconst [deletingFolder, setDeletingFolder] = useState(false)\n\n    const startDeleteFolder = () => {\n\t\tif (showDelete) {\n\t\t\treturn\n\t\t}\n        setShowDelete(true)\n        return\n    }\n\n\tconst editName = () => {\n\t\tif (editable) {\n\t\t\treturn\n\t\t}\n\t\tsetEditable(true)\n\t}\n\n\tconst cancelEdit = () => {\n\t\tif (!editable) {\n\t\t\treturn\n\t\t}\n\t\tsetEditable(false)\n\t\tsetFolderName(newFolder ? \"\" : folder.folderName)\n\t}\n\n\tconst handleNewFolder = async (event) => {\n\t\tevent.preventDefault()\n\t\tsetEditable(false)\n\t\tif (newFolder) {\n\t\t\tsetCreatingFolder(true)\n\t\t} else {\n\t\t\tsetEditingFolder(true)\n\t\t}\n\t\tsetCallingAPI(true)\n\t}\n\n\tconst handleClose = () => {\n\t\tif (!showDelete) {\n\t\t\treturn\n\t\t}\n\t\tsetShowDelete(false)\n\t\treturn\n\t}\n\n\tconst handleDelete = () => {\n\t\tsetDeletingFolder(true)\n\t\tsetShowDelete(false)\n\t\tsetCallingAPI(true)\n\t}\n\n\tuseEffect(() => {\n\t\tif (!callingAPI) {\n\t\t\treturn\n\t\t}\n\t\t(async () => {\n\t\t\tlet result;\n\t\t\tswitch (true) {\n\t\t\t\tcase creatingFolder:\n\t\t\t\t\tconsole.log(`attempting to create folder: ${folderName}`)\n\t\t\t\t\tsetCreatingFolder(false)\n\t\t\t\t\tsetCallingAPI(false)\n\t\t\t\t\tsetFolderName(\"\")\n\t\t\t\t\tresult = await createFolder(folderName, token)\n\t\t\t\t\tbreak\n\t\t\t\tcase deletingFolder:\n\t\t\t\t\tsetDeletingFolder(false)\n\t\t\t\t\tsetCallingAPI(false)\n\t\t\t\t\tresult = await deleteFolder(folder.folderId, token)\n\t\t\t\t\tbreak\n\t\t\t\tcase editingFolder:\n\t\t\t\t\tsetEditingFolder(false)\n\t\t\t\t\tsetCallingAPI(false)\n\t\t\t\t\tresult = await changeFolderName(folder.folderId, folderName, token)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (result.error) {\n\t\t\t\ttoast(result.error, { type: 'error' })\n\t\t\t} else {\n\t\t\t\ttoast(result.message, { type: 'success' })\n\t\t\t}\n\t\t\trefresh()\n\t\t})()\n\t}, [callingAPI])\n\n    const viewFolder = (folderId) => {\n        selectFolder(folderId)\n    }\n\n\tconst nameForm = (\n\t\t<Form onSubmit={handleNewFolder}>\n\t\t\t<input\n\t\t\t\tclassName='folder-input'\n\t\t\t\ttype='text'\n\t\t\t\tname='folderName'\n\t\t\t\tid='folderName'\n\t\t\t\tplaceholder={`${folder.folderName}`}\n\t\t\t\tvalue={folderName}\n\t\t\t\tonChange={(e) => setFolderName(e.target.value)}\n\t\t\t\tonBlur={() => {cancelEdit()}}\n\t\t\t\tautoFocus\n\t\t\t/>\n\t\t</Form>\n\t)\n\n\tconst deleteModal = (\n\t\t<Modal\n\t\t\tshow={showDelete}\n\t\t\tbackdrop='static'\n\t\t\tkeyboard={false}\n\t\t\t>\n\t\t\t\t<ModalHeader>\n\t\t\t\t\t<ModalTitle>Are you sure you want to delete {folder.folderName}?</ModalTitle>\n\t\t\t\t</ModalHeader>\n\t\t\t\t<ModalBody>\n\t\t\t\t\tThis action cannot be undone.\n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter>\n\t\t\t\t\t<Button className='btn-secondary' onClick={handleClose}>Cancel</Button>\n\t\t\t\t\t<Button className='btn-warning' onClick={handleDelete}>Delete</Button>\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t)\n\n    return (\n\t\t\t<>\n\t\t\t\t<Row\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\ttextOverflow: 'ellipsis',\n\t\t\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\t\t}}>\n\t\t\t\t\t<Col\n\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\tnewFolder ? () => editName() : () => viewFolder(folder.folderId)\n\t\t\t\t\t\t}\n\t\t\t\t\t\txs={'8'}\n\t\t\t\t\t\tclassName='text-large cardtxt'\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tfontWeight: '300',\n\t\t\t\t\t\t\tfontSize: '16px',\n\t\t\t\t\t\t\tletterSpacing: '1px',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<span className={'link ' + (selected ? 'selected-text' : '')}>\n\t\t\t\t\t\t\t{editable\n\t\t\t\t\t\t\t\t? nameForm\n\t\t\t\t\t\t\t\t: folder.folderName.length <= (selected ? 15 : 17)\n\t\t\t\t\t\t\t\t? folder.folderName\n\t\t\t\t\t\t\t\t: folder.folderName.substring(0, selected ? 13 : 15) + '...'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={'4'} hidden={newFolder} className='float-end'>\n\t\t\t\t\t\t<MdDelete\n\t\t\t\t\t\t\tonClick={() => startDeleteFolder()}\n\t\t\t\t\t\t\tcolor='#FF6370'\n\t\t\t\t\t\t\tclassName=' icon'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tzIndex: '1',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<MdEdit\n\t\t\t\t\t\t\tclassName='icon '\n\t\t\t\t\t\t\tcolor='#54eafe'\n\t\t\t\t\t\t\tonClick={() => editName()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{deleteModal}\n\t\t\t</>\n\t\t)\n}\n\nexport default Folder","import { BB_URL } from '../constants'\n\nexport const bookmarkTweets = async (folderId, tweets, token) => {\n    const bookmarkURL = BB_URL + '/user/folders/' + folderId\n    const reqData = JSON.stringify({\n\t\ttweets: tweets\n\t})\n\ttry {\n\t\tconst response = await fetch(bookmarkURL, {\n\t\t\tmethod: 'PUT',\n\t\t\tcache: 'no-cache',\n\t\t\theaders: {\n\t\t\t\tAuthorization: `JWT ${token}`,\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: reqData,\n\t\t})\n\t\tconst status = response.status\n\t\tconst data = await response.json()\n\t\tconsole.log(data)\n\t\tif (status === 201) {\n\t\t\treturn {\n\t\t\t\terror: null,\n\t\t\t\tmessage: data\n\t\t\t}\n\t\t} else {\n\t\t\treturn {\n\t\t\t\terror: data,\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error)\n\t\treturn { error: error }\n\t}\n}\n\nexport const deleteTweet = async (folderId, tweet, token) => {\n\tconst deleteURL = BB_URL + '/user/folders/' + folderId\n\tconst reqData = JSON.stringify({\n\t\ttweets: [tweet]\n\t})\n\ttry {\n\t\tconst response = await fetch(deleteURL, {\n\t\t\tmethod: 'PATCH',\n\t\t\tcache: 'no-cache',\n\t\t\theaders: {\n\t\t\t\tAuthorization: `JWT ${token}`,\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: reqData,\n\t\t})\n\t\tconst status = response.status\n\t\tconst data = await response.json()\n\t\tconsole.log(data)\n\t\tif (status === 200) {\n\t\t\treturn {\n\t\t\t\terror: null,\n\t\t\t\tmessage: 'Deleted tweet from ',\n\t\t\t}\n\t\t} else {\n\t\t\treturn {\n\t\t\t\terror: data,\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error)\n\t\treturn { error: error }\n\t}\n}","import React, { useEffect, useState, createRef } from 'react'\nimport { Row, Col, Spinner, Container } from 'reactstrap'\n\nimport { MdDelete } from 'react-icons/md'\n\nimport { MdClose } from 'react-icons/md'\n\nimport { twtEmbedRE  } from '../constants'\n\nimport { useInViewport } from 'react-in-viewport'\n\nconst Tweet = (props) => {\n\n\tconst { tweet, load, embed, remove, display } = props\n\n\tconst [enteredView, setEnteredView] = useState(false)\n\tconst [ twtUrl, setTwtUrl ] = useState(tweet.twtHtml.match(twtEmbedRE)[0])\n\n\tconst tweetRef = createRef()\n\tconst divRef = createRef()\n\tconst config = { disconnectOnLeave: false}\n\tconst { inViewport, enterCount } = useInViewport(\n\t\tdivRef,\n\t\tconfig,\n\t\tprops\n\t)\n\n\tconst tweetDOMId = `twt-${tweet.twtId}`\n\tconst divDOMId = `div-${tweet.twtId}`\n\n\tuseEffect(() => {\n\t\tif (enteredView || enterCount > 1 || !inViewport) {\n\t\t\treturn\n\t\t}\n\t\tif (inViewport) {\n\t\t\tsetEnteredView(true)\n\t\t\treturn\n\t\t}\n\t}, [inViewport])\n\n\tuseEffect(() => {\n\t\tif (!enteredView) {\n\t\t\treturn\n\t\t}\n\t\tif (enteredView) {\n\t\t\tconsole.log('div entered view:')\n\t\t\tconsole.log(divRef)\n\t\t\tload(tweetDOMId)\n\t\t\treturn\n\t\t}\n\t},[enteredView])\n\n\tuseEffect(() => {\n\t\tif (!enteredView || !display) {\n\t\t\treturn\n\t\t} else {\n\t\t\tload(tweetDOMId)\n\t\t}\n\t}, [display])\n\n\t// useEffect(() => {\n\t// \tif (Object.keys(compHtml).length !== 0) {\n\t// \t\treturn\n\t// \t}\n\t// \tconst url = tweet.twtHtml.match(twtEmbedRE)[0]\n\t// \t// const html =\n\t// \t// \ttwtEmbedPrefix.slice(0, 12) +\n\t// \t// \t`id=\"${tweetDOMId}\" ` +\n\t// \t// \ttwtEmbedPrefix.slice(12) +\n\t// \t// \turl +\n\t// \t// \ttwtEmbedSuffix\n\t// \t// console.log(html)\n\t// \t// setCompHtml({ __html: html })\n\t// }, [compHtml])\n\n\t// const loaded = () => {\n\t// \tsetIsLoading(false)\n\t// }\n\n\t// useEffect(() => {\n\t// \tif (isLoaded) {\n\t// \t\treturn\n\t// \t}\n\t// \tsetIsLoaded(true)\n\t// \tsetShowTweet(true)\n\t// }, [isLoaded])\n\n\tconst deleteTweet = () => {\n\t\treturn\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div ref={divRef} className='center' hidden={embed}>\n\t\t\t\t<Spinner color='primary' />\n\t\t\t</div>\n\t\t\t<MdDelete\n\t\t\t\tonClick={() => {\n\t\t\t\t\tremove(tweet.twtId)\n\t\t\t\t}}\n\t\t\t\tclassName={'delete-tweet ' + (embed ? '' : 'hidden')}\n\t\t\t/>\n\t\t\t<div id={divDOMId} ref={tweetRef} className='tweet-div'>\n\t\t\t\t<blockquote\n\t\t\t\t\tid={tweetDOMId}\n\t\t\t\t\tclassName='twitter-tweet'\n\t\t\t\t\tdata-conversation='none'\n\t\t\t\t\tdata-dnt='true'\n\t\t\t\t\tdata-theme='dark'>\n\t\t\t\t\t<a href={twtUrl}></a>\n\t\t\t\t</blockquote>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default Tweet\n","import React, { useContext, useEffect, useState } from 'react'\n\nimport {\n\tContainer,\n\tListGroup,\n\tListGroupItem,\n\tSpinner,\n\tButton,\n    Row,\n    Col\n} from 'reactstrap'\n\nimport { AppContext } from '../context/Context'\n\nimport { toast } from 'react-toastify'\n\nimport { Redirect } from 'react-router-dom'\n\nimport { getOneFolder } from '../api/folders'\nimport { deleteTweet as remove } from '../api/tweets'\n\nimport Tweet from '../components/Tweet'\n\nconst OneFolder = ({folder}) => {\n\tconst { state, dispatch } = useContext(AppContext)\n\tconst { loggedIn, token } = state\n\n\tconst [isLoading, setIsLoading] = useState(true)\n\tconst [tweetsArr, setTweetsArr] = useState([])\n\tconst [twtObjs, setTwtObjs] = useState([])\n\tconst [noFolder, setNoFolder] = useState(false)\n\tconst [loadedTweets, setLoadedTweets] = useState([])\n\tconst [loadedTweet, setLoadedTweet] = useState('')\n\tconst [deletingTweet, setDeletingTweet] = useState(null)\n\tconst [eraseTweet, setEraseTweet] = useState(false)\n\n\tconst [embed, setEmbed] = useState(true)\n\n\tconst [tweetCols, setTweetCols] = useState({colA: [], colB: []})\n\n\tconst loadTweet = (elementId) => {\n\t\twindow.twttr.widgets.load(document.getElementById(`${elementId}`))\n\t\twindow.twttr.events.bind('rendered', (event) => {\n\t\t\tsetLoadedTweet(event.target.children[0].dataset.tweetId)\n\t\t})\n\t}\n\n\tconst deleteTweet = (twtId) => {\n\t\tif (deletingTweet) {\n\t\t\treturn\n\t\t}\n\t\tsetDeletingTweet(twtId)\n\t}\n\n\tuseEffect(() => {\n\t\tif (!deletingTweet) {\n\t\t\treturn\n\t\t} else {\n\t\t\t(async () => {\n\t\t\t\tconst result = await remove(folder.folderId, deletingTweet, token)\n\t\t\t\tif (result.error) {\n\t\t\t\t\ttoast('Failed to delete Tweet', { type: 'error' })\n\t\t\t\t} else {\n\t\t\t\t\ttoast(result.message + folder.folderName, { type: 'success' })\n\t\t\t\t}\n\t\t\t})()\n\t\t}\n\t\tsetEraseTweet(true)\n\t}, [deletingTweet])\n\n\tuseEffect(() => {\n\t\tif (!eraseTweet) {\n\t\t\treturn\n\t\t} else {\n\t\t\tconst newObjs = [...twtObjs].map(obj => {\n\t\t\t\treturn obj.twtId === deletingTweet\n\t\t\t\t\t? {...obj, display: false}\n\t\t\t\t\t: obj\n\t\t\t})\n\t\t\tsetTwtObjs(newObjs)\n\t\t\tsetDeletingTweet(null)\n\t\t\tsetEraseTweet(false)\n\t\t\twindow.twttr.widgets.load()\n\t\t}\n\t}, [eraseTweet])\n\n\tuseEffect(() => {\n\t\tif (loadedTweets.includes(loadedTweet) || loadedTweet === '') {\n\t\t\treturn\n\t\t} else {\n\t\t\tconst newArr = [...loadedTweets]\n\t\t\tnewArr.push(loadedTweet)\n\t\t\tsetLoadedTweets(newArr)\n\t\t}\n\t}, [loadedTweet])\n\n\tuseEffect(() => {\n\t\tconst newObjs = [...twtObjs].map(obj => \n\t\t\t(loadedTweets.some(twtId => obj.twtId === twtId)\n\t\t\t\t? {...obj, loaded: true}\n\t\t\t\t: obj\n\t\t\t\t)\n\t\t)\n\t\tsetTwtObjs(newObjs)\n\t}, [loadedTweets])\n\n\tuseEffect(() => {\n\t\tif (!folder || folder.folderId === null) {\n\t\t\tsetIsLoading(false)\n\t\t\tsetNoFolder(true)\n\t\t\treturn\n\t\t}\n\t\tif (loggedIn) {\n\t\t\t;(async () => {\n\t\t\t\tconst tweets = await getOneFolder(folder.folderId, token)\n\t\t\t\tif (tweets.error) {\n\t\t\t\t\ttoast(`Error: ${tweets.error}`)\n\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (tweets.tweets) {\n\t\t\t\t\tsetNoFolder(false)\n\t\t\t\t\tsetTweetsArr(tweets.tweets)\n\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t}\n\t\t\t})()\n\t\t}\n\t}, [folder])\n\n\tuseEffect(() => {\n\t\tif (tweetsArr.length === 0) {\n\t\t\tsetTweetCols({colA: [], colB: []})\n\t\t\treturn\n\t\t}\n\t\tif (twtObjs.length !== 0) {\n\t\t\treturn\n\t\t}\n\t\tsetTwtObjs(\n\t\t\ttweetsArr.map((tweet) => ({\n\t\t\t\ttwtId: tweet.twtId,\n\t\t\t\tloaded: false,\n\t\t\t\ttweet: tweet,\n\t\t\t\tdisplay: true\n\t\t\t}))\n\t\t)\n\t}, [tweetsArr])\n\n\tuseEffect(() => {\n\t\tif (twtObjs.length === 0) {\n\t\t\treturn\n\t\t}\n\t\ttwtObjs.forEach(obj => console.log(obj))\n\t\tconst [colA, colB] = [[], []]\n\t\ttwtObjs.filter(obj => obj.display === true).forEach((tweet, i) => {\n\t\t\ti % 2 === 0\n\t\t\t\t? colA.push(\n\t\t\t\t\t\t<ListGroupItem key={tweet.twtId} className='tweetcard mb-4'>\n\t\t\t\t\t\t\t<Tweet\n\t\t\t\t\t\t\t\tload={loadTweet}\n\t\t\t\t\t\t\t\ttweet={tweet.tweet}\n\t\t\t\t\t\t\t\tembed={tweet.loaded}\n\t\t\t\t\t\t\t\tkey={tweet.twtId}\n\t\t\t\t\t\t\t\tremove={deleteTweet}\n\t\t\t\t\t\t\t\tdisplay={tweet.display}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t  )\n\t\t\t\t: colB.push(\n\t\t\t\t\t\t<ListGroupItem key={tweet.twtId} className='tweetcard mb-4'>\n\t\t\t\t\t\t\t<Tweet\n\t\t\t\t\t\t\t\tload={loadTweet}\n\t\t\t\t\t\t\t\ttweet={tweet.tweet}\n\t\t\t\t\t\t\t\tembed={tweet.loaded}\n\t\t\t\t\t\t\t\tkey={tweet.twtId}\n\t\t\t\t\t\t\t\tremove={deleteTweet}\n\t\t\t\t\t\t\t\tdisplay={tweet.display}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t  )\n\t\t})\n\t\tsetTweetCols({colA: colA, colB: colB})\n\t}, [twtObjs])\n\n\tconst toggleEmbed = () => {\n\t\tsetEmbed(!embed)\n\t}\n\n\tif (!loggedIn) {\n\t\treturn <Redirect to='/auth'></Redirect>\n\t} else if (isLoading) {\n\t\treturn (\n\t\t\t<div className='Center'>\n\t\t\t\t<Spinner color='primary' />\n\t\t\t\t<div className='text-primary'>Loading...</div>\n\t\t\t</div>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{' '}\n\t\t\t\t{!noFolder ? (\n\t\t\t\t\t<Container className='folder-title'>\n\t\t\t\t\t\t<Row className='justify-content-md-center'>\n\t\t\t\t\t\t\t<Col md='auto'>\n\t\t\t\t\t\t\t\t<div className='folderName'>{folder.folderName}</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t) : null}\n\t\t\t\t<Container scrollable={`true`} className='mt-4 mb-5 tweet-list'>\n\t\t\t\t\t{tweetsArr.length === 0 && !isLoading ? (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='Center text-large cardtxt'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tfontWeight: '700',\n\t\t\t\t\t\t\t\tfontSize: '32px',\n\t\t\t\t\t\t\t\tletterSpacing: '2px',\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tNo Tweets (yet)!\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>{tweetCols.colA}</Col>\n\t\t\t\t\t\t\t<Col>{tweetCols.colB}</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t)}\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default OneFolder","\nconst getImportResults = (result, folderName) => {\n    const resultObj = {}\n    if (result.error) {\n        resultObj.header = 'Failed to add Tweets'\n        resultObj.body =\n            'Logging in with Twitter may help. If you are already logged in with Twitter, ensure that your account has access to the Tweets you have selected.'\n        resultObj.link = true\n        resultObj.showBody = true\n        resultObj.error = true\n        return resultObj\n    } else {\n        resultObj.remaining = []\n\t\t\t\t\t.concat(result.message.apiErrIds)\n\t\t\t\t\t.concat(result.message.badIds)\n        resultObj.header = `Added ${result.message.bookmarkedCount} Tweets to ${folderName}`\n        resultObj.body =\n            '' +\n            (result.message.duplicateCount > 0\n                ? `${result.message.duplicateCount} were already in folder.\\n`\n                : '') +\n            (result.message.apiErrCount > 0\n                ? `${result.message.apiErrCount} could not be bookmarked. Logging in with Twitter may help.\\n`\n                : '')\n        resultObj.link = (result.message.apiErrCount > 0)\n        resultObj.showBody = (resultObj.body.length >= 1)\n        resultObj.error = false\n        console.log(`returning resultObj: `)\n        console.log(resultObj)\n        return resultObj\n    }\n}\n\nexport default getImportResults","import React, { useContext, useEffect, useState } from 'react'\n\nconst ImportField = (props) => {\n    const { fieldNumber, setValue, valid, validate, value } = props\n    const [ inputValue, setInputValue ] = useState(\"\")\n    const [ validity, setValidity ] = useState(null)\n\n    useEffect(() => {\n        console.log(`field #${fieldNumber}.valid=${valid}`)\n        setValidity(valid)\n    }, [valid])\n\n    const resetValidity = () => {\n        if (validity === 'valid') {\n            return\n        }\n        setValidity(null)\n    }\n    \n    const checkValidity = () => {\n        validate()\n        setValidity(valid)\n    }\n\n    useEffect(() => {\n        setValue(fieldNumber, inputValue)\n    }, [inputValue])\n\n    useEffect(() => {\n        if (value === inputValue) {\n            return\n        } else {\n            setInputValue(value)\n        }\n    }, [value])\n\n    return (\n\t\t\t<input\n\t\t\t\tclassName={\n\t\t\t\t\t'mb-4 ' +\n\t\t\t\t\t(!validity\n\t\t\t\t\t\t? 'folder-input'\n\t\t\t\t\t\t: validity === 'valid'\n\t\t\t\t\t\t? 'valid-input'\n\t\t\t\t\t\t: 'invalid-input')\n\t\t\t\t}\n\t\t\t\ttype='text'\n\t\t\t\tname={`tweetinput-${fieldNumber}`}\n\t\t\t\tid={`tweetinput-${fieldNumber}`}\n\t\t\t\tplaceholder={'Tweet ID or URL'}\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={(e) => setInputValue(e.target.value)}\n\t\t\t\tonFocus={resetValidity}\n\t\t\t\tonBlur={checkValidity}\n\t\t\t/>\n\t\t)\n}\n\nexport default ImportField","import React, { useContext, useEffect, useState } from 'react'\nimport { AppContext } from '../context/Context'\nimport { FormGroup, Form, Container, Button, Spinner } from 'reactstrap'\nimport { toast } from 'react-toastify'\nimport { bookmarkTweets } from '../api/tweets'\nimport getTwtUrl from '../newtwturl'\nimport { NavLink } from 'react-router-dom'\nimport {Modal, ModalBody, ModalTitle, ModalFooter, CloseButton } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/esm/ModalHeader'\n\nimport { twtREOne, twtRETwo } from '../constants'\nimport getImportResults from '../functions/getImportResults'\n\nimport ImportField from '../components/ImportField'\nimport Nav from 'reactstrap/lib/Nav'\n\n\nconst Import = ({folder}) => {\n\n    const getInitialFields = () => {\n\t\t\treturn [0, 1, 2, 3, 4].map((n) => ({ number: n, value: '', valid: null }))\n\t\t}\n    \n    const { state, dispatch } = useContext(AppContext)\n    const { token } = state\n    const [ callingApi, setCallingApi ] = useState(false)\n    const [ inputObjs, setInputObjs ] = useState([])\n    const [ showResult, setShowResult ] = useState(false)\n    const [ resultInfo, setResultInfo ] = useState({})\n    const [ isLoading, setIsLoading ] = useState(false)\n\n    const validateInputs = () => {\n        setInputObjs(inputObjs.map(input => {\n            return input.value.length === 0\n                ? {...input, valid: null}\n                : (twtREOne.test(input.value) || twtRETwo.test(input.value))\n                ? {...input, valid: 'valid'}\n                : {...input, valid: 'invalid'}\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        validateInputs()\n        if (inputObjs.some(input => input.valid === 'invalid')) {\n            toast('Some inputs are invalid!', { type: 'error' })\n            return\n        } else {\n            setCallingApi(true)\n        }\n    }\n\n    useEffect(() => {\n        if (!callingApi) {\n            return\n        }\n        setIsLoading(true)\n        setCallingApi(false)\n        const tweets = inputObjs.reduce((array, input, i) => {\n\t\t\t\t\tif (input.value.length > 0 && input.valid === 'valid') {\n\t\t\t\t\t\tarray.push(input.value)\n\t\t\t\t\t}\n\t\t\t\t\treturn array\n\t\t\t\t}, []);\n        (async () => {\n            const result = await bookmarkTweets(folder.folderId, tweets, token)\n            setResultInfo(getImportResults(result, folder.folderName))\n            setIsLoading(false)\n            setShowResult(true)\n        })()\n    }, [callingApi])\n\n    useEffect(() => {\n        if (Object.keys(resultInfo).length === 0) {\n            return\n        }\n        console.log('useEffect resultInfo')\n        console.log(resultInfo)\n        console.log(`remaining length: ${resultInfo.remaining?.length}`)\n        if (resultInfo.remaining?.length > 0) {\n            setInputObjs(\n\t\t\t\t\t\t\tresultInfo.remaining.map((id, i) => ({\n\t\t\t\t\t\t\t\tnumber: i,\n\t\t\t\t\t\t\t\tvalue: id,\n\t\t\t\t\t\t\t\tvalid: 'valid',\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t)\n        } else {\n            setInputObjs(getInitialFields())\n        }\n    }, [resultInfo])\n\n    useEffect(() => {\n        if (inputObjs.length === 0) {\n            setInputObjs(getInitialFields())\n            return\n        }\n        const lastObj = inputObjs[inputObjs.length - 1]\n        if (lastObj.value.length > 0) {\n            const newObj = {\n                number: lastObj.number + 1,\n                value: \"\",\n                valid: null\n            }\n            setInputObjs([...inputObjs, newObj])\n        }\n    }, [inputObjs])\n\n    const updateValue = (inputNumber, value) => {\n        setInputObjs(inputObjs.map(input => {\n            return input.number === inputNumber\n                ? {...input, value: value}\n                : input\n        }))\n    }\n\n    const handleClose = () => {\n        setResultInfo({})\n        if (!showResult) {\n            return\n        }\n        setShowResult(false)\n    }\n\n    const twtLink = <NavLink to='/twitter' className='text-white'>Login with Twitter</NavLink>\n\n    const resultModal = (\n\t\t\t<Modal show={showResult} backdrop='static' keyboard={false}>\n\t\t\t\t<ModalHeader>\n\t\t\t\t\t<ModalTitle>{resultInfo.header}</ModalTitle>\n\t\t\t\t</ModalHeader>\n\t\t\t\t{resultInfo.showBody ? (\n\t\t\t\t\t<ModalBody>\n\t\t\t\t\t\t{resultInfo.body}\n\t\t\t\t\t\t{resultInfo.link ? twtLink : null}\n\t\t\t\t\t</ModalBody>\n\t\t\t\t) : null}\n\t\t\t\t<ModalFooter>\n\t\t\t\t\t<Button color='primary' onClick={handleClose}>\n\t\t\t\t\t\tDone\n\t\t\t\t\t</Button>\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t)\n   return (\n\t\t\t<>\n\t\t\t\t<div hidden={!isLoading} className='Center'>\n\t\t\t\t\t<Spinner color='primary' />\n\t\t\t\t\t<div className='text-primary'>Loading...</div>\n\t\t\t\t</div>\n\t\t\t\t<div hidden={isLoading}>\n\t\t\t\t\t<Container className='input-list'>\n\t\t\t\t\t\t<Form onSubmit={handleSubmit} className={'mt-4 text-center'}>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t{inputObjs.map((input) => (\n\t\t\t\t\t\t\t\t\t<ImportField\n\t\t\t\t\t\t\t\t\t\tkey={input.number}\n\t\t\t\t\t\t\t\t\t\tsetValue={updateValue}\n\t\t\t\t\t\t\t\t\t\tfieldNumber={input.number}\n\t\t\t\t\t\t\t\t\t\tvalid={input.valid}\n\t\t\t\t\t\t\t\t\t\tvalidate={validateInputs}\n                                        value={input.value}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<Button color='primary' type='submit'>\n\t\t\t\t\t\t\t\tImport Tweets\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Container>\n\t\t\t\t</div>\n\t\t\t\t{resultModal}\n\t\t\t</>\n\t\t)\n}\n\nexport default Import","import React, { useContext, useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport {\n\tContainer,\n\tSpinner,\n    Row,\n    Col\n} from 'reactstrap'\n\nimport { AppContext } from '../context/Context'\n\nimport { toast } from 'react-toastify'\n\nimport { Redirect } from 'react-router-dom'\n\nimport { getFolders } from '../api/folders'\n\nimport Folder from '../components/Folder'\n\nimport OneFolder from './OneFolder'\nimport Import from './Import'\n\nconst Folders = () => {\n    const { state, dispatch } = useContext(AppContext)\n\n\tconst { loggedIn, token } = state\n\n    const [ isLoading, setIsLoading ] = useState(true)\n    const [ gotFolders, setGotFolders ] = useState(false)\n    const [ foldersArr, setFoldersArr ] = useState([])\n    const [ currentFolder, setCurrentFolder] = useState(null)\n    const [ prevFolder, setPrevFolder ] = useState(null)\n    const [ selectedFolder, setSelectedFolder ] = useState({folderId: null})\n\n    const refreshFolders = () => {\n        setGotFolders(false)\n        setIsLoading(true)\n    }\n\n    const selectFolder = (folderId) => {\n        if (prevFolder.folderId === folderId) {\n            return\n        }\n        setCurrentFolder(foldersArr.find(folder => folder.folderId === folderId))\n    }\n\n    useEffect(() => {\n        if (!currentFolder) {\n            return\n        }\n        if (prevFolder) {\n            if (\n                    currentFolder.folderId === prevFolder.folderId &&\n                    currentFolder.tweets.length === prevFolder.tweets.length\n                ) {\n                    return\n                } else {\n                    setSelectedFolder(currentFolder)\n                    setPrevFolder(currentFolder)\n                }\n        } else {\n            setSelectedFolder(currentFolder)\n            setPrevFolder(currentFolder)\n        }\n    }, [currentFolder])\n\n    useEffect(() => {\n        if (gotFolders) {\n            return\n        }\n        if (loggedIn) {\n            (async () => {\n                const folders = await getFolders(token)\n                if (folders.error) {\n                    toast(`Error: ${folders.error}`)\n                    setGotFolders(true)\n                    setIsLoading(false)\n                    return\n                }\n                if (folders.folders) {\n                    setFoldersArr(folders.folders)\n                    setGotFolders(true)\n\t\t\t\t\tsetIsLoading(false)\n                }\n            })()\n        }\n    }, [gotFolders])\n\n    useEffect(() => {\n        if (foldersArr.length === 0) {\n            return\n        }\n        setCurrentFolder(\n\t\t\t\t\tprevFolder\n\t\t\t\t\t\t? foldersArr.find(\n\t\t\t\t\t\t\t\t(folder) => folder.folderId === prevFolder.folderId\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: foldersArr[0]\n\t\t\t\t)\n    }, [foldersArr])\n\n    if (!loggedIn) {\n        return (\n            <Redirect to='/auth' />\n        )\n    } else {\n        return (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div hidden={!isLoading} className='Center'>\n\t\t\t\t\t\t\t<Spinner color='primary' />\n\t\t\t\t\t\t\t<div className='text-primary'>Loading...</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div hidden={isLoading}>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col md={3}>\n\t\t\t\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\t\t\t\tscrollable={`true`}\n\t\t\t\t\t\t\t\t\t\tclassName='folder-list pt-4 container-fluid no-padding'>\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='folder-listcard mb-4'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Folder\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfolder={{ folderName: 'New Folder' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={'newFolder'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewFolder={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trefresh={refreshFolders}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t{foldersArr.map((folder) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'mb-4 ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(folder.folderId === selectedFolder.folderId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'selected-folder'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'folder-listcard')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Folder\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfolder={folder}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={folder.folderId}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewFolder={false}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trefresh={refreshFolders}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectFolder={selectFolder}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected={folder.folderId === selectedFolder.folderId}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col md={9}>\n\t\t\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/folders/view'>\n\t\t\t\t\t\t\t\t\t\t\t<OneFolder folder={selectedFolder}></OneFolder>\n\t\t\t\t\t\t\t\t\t\t</Route>\n                                        <Route exact path='/folders/import'>\n                                            <Import folder={selectedFolder}></Import>\n                                        </Route>\n\t\t\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)\n    } \n}\n\nexport default Folders","import {\n\tSET_USER,\n\tSET_TOKEN,\n\tSET_LOGIN,\n\tSET_FOLDERS,\n\tRESET_SIGNIN,\n\tSET_SHOW_LOGOUT,\n\tSET_PREV_USER,\n\tSET_SINGLE_FOLDER,\n\tSET_SINGLE_FOLDER_NAME,\n\tSET_USER_ID,\n\tSET_TWT_CHALLENGE,\n} from './action.types'\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_TWT_CHALLENGE:\n      return action.payload === null\n        ? { ...state, twtChallenge: null}\n        : { ...state, twtChallenge: action.payload}\n    case SET_USER_ID:\n      return action.payload === null\n        ? { ...state, userId: null}\n        : { ...state, userId: action.payload}\n    case SET_SINGLE_FOLDER_NAME:\n      return { ...state, folderName: action.payload}\n    case SET_SINGLE_FOLDER:\n      return { ...state, folder: action.payload}\n    case SET_PREV_USER:\n      return action.payload === null\n        ? { ...state, prevUser: null}\n        : { ...state, prevUser: action.payload}\n    case SET_SHOW_LOGOUT:\n      return { ...state, showLogout: action.payload }\n    case RESET_SIGNIN:\n      return { ...state, signIn: true}\n    case SET_FOLDERS:\n      return action.payload === null\n        ? { ...state, folders: []}\n        : { ...state, folders: action.payload}\n    case SET_LOGIN:\n      return action.payload === null\n        ? { ...state, loggedIn: false}\n        : { ...state, loggedIn: action.payload}\n    case SET_USER:\n      return action.payload === null\n        ? { ...state, user: null}\n        : { ...state, user: action.payload}\n    case SET_TOKEN:\n      return action.payload === null || action.payload === false\n        ? { ...state, token: null}\n        : { ...state, token: action.payload}\n    default:\n      return state\n  }\n}","import React, { useEffect, useReducer } from \"react\";\n\nimport { Container } from \"reactstrap\";\n\nimport { randomBytes } from 'crypto'\n\n// react-router-dom3\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// react toastify stuffs\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// bootstrap css\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\n// components\nimport Header from \"./layout/Header\"\nimport Footer from \"./layout/Footer\"\nimport PageNotFound from \"./pages/PageNotFound\"\nimport Auth from \"./pages/Auth\"\nimport Home from \"./pages/Home\"\nimport Folders from \"./pages/Folders\"\n\nimport reducer from \"./context/reducer\";\nimport { AppContext } from \"./context/Context\";\n\nconst initialState = {\n  showLogout: false,\n  inAuth: false,\n  loggedIn: false,\n  twtAuth: {\n    authed: false,\n    twtId: null,\n    twtToken: null,\n    twtSecret: null\n  },\n  user: null,\n  userId: null,\n  twtChallenge: null,\n  twtState: randomBytes(48).toString('hex'),\n  prevUser: null,\n  token: null,\n  folders: [],\n  folder: {},\n  folerName: null,\n  folderToUpdate: null,\n  folderIdToUpdate: null\n};\n\nconst App = () => {\n  \n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {loggedIn} = state\n\n  return (\n\t\t<Router basename='better-bookmarks'>\n\t\t\t<AppContext.Provider value={{ state, dispatch }}>\n\t\t\t\t<ToastContainer theme='dark' />\n\t\t\t\t<Header />\n\t\t\t\t<Container fluid className='h-75'>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/auth' component={Auth} />\n\t\t\t\t\t\t<Route path='/folders' component={Folders} />\n\t\t\t\t\t\t<Route exact path='/' component={Home} />\n\t\t\t\t\t\t<Route exact path='*' component={PageNotFound} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Container>\n\t\t\t\t{/* <Footer /> */}\n\t\t\t</AppContext.Provider>\n\t\t</Router>\n\t)\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}